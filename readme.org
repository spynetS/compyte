#+title: Readme

Skibidi is a component library for python which lets you have components in html. It takes in a html with the *skibidi* syntax and returns the html with component results. It has a integrated python run envirionment with the syntax.

load stuff (using python exec to load python to the python envirionment)
#+begin_src django
{$ import os $}
{$ name='skibidi'+' toilet' $}
#+end_src

executing (using eval and replaces with result)
#+begin_src django
{% name %}
{% 10 +10 %}
#+end_src

** Example

This is a example of the *skibidi* html

- index.html
#+begin_src html
<!doctype html>
<html class="no-js" lang="">
	<head>
		<meta charset="utf-8">
		<meta http-equiv="x-ua-compatible" content="ie=edge">
		<title>Untitled</title>
		<meta name="description" content="">
		<meta name="viewport" content="width=device-width, initial-scale=1">

		<link href="https://cdn.jsdelivr.net/npm/daisyui@4.12.12/dist/full.min.css" rel="stylesheet" type="text/css" />
		<script src="https://cdn.tailwindcss.com"></script>

		<link rel="apple-touch-icon" href="/apple-touch-icon.png">
		<!-- Place favicon.ico in the root directory -->
	</head>
	<body>
		{$ import os $}
		<h1>{% os.getcwd() %}</h1>
		<card component="./tests/card.html" >
			{$ string = 'what is ' + str(10-2) $}
			<h1 class="text-4xl font-bold" >test</h1>
			<btn title="click" onclick="alert('{% string %}')" component="./tests/button.html"></btn>
		</card>
	</body>
</html>

#+end_src

-card.html
#+begin_src html
<div class="bg-base-200 rounded-lg p-12" >
  {% props['children'] %}
</div>
#+end_src

-button.html
#+begin_src html
<button onclick="{% props['onclick'] %}" class="btn btn-primary" >
	{% props['title'] %}
</button>
#+end_src


-main.py
#+begin_src python
from skibidi import *

output = open('tests/output.html','w')
output.write(parse(open("tests/index.html","r").read()))

#+end_src
